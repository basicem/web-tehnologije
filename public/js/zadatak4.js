let assert = chai.assert;
    describe('TestoviParser', function() {
        describe('porediRezultate()', function(txt1, txt2) {
            //Isti testovi
            it('Treba nam vratiti {"promjena":"66.7%","greske":["Tabela crtaj() should draw 2 columns in row 2 when parameter are 2,3","Tabela crtaj() should draw 2 columns in row 2 when parameter are 3,3","Tabela crtaj() should draw 3 rows when parameter are 2,3"]}', function() {
                var rezultat1 = "{\"stats\":{\"suites\": 2,\"tests\": 3,\"passes\": 2,\"pending\": 0,\"failures\": 1,\"start\": \"2021-11-21T22:59:16.206Z\",\"end\": \"2021-11-21T22:59:16.224Z\",\"duration\": 18},\"tests\": [{\"title\": \"should draw 3 rows when parameter are 2,3\",\"fullTitle\": \"Tabela crtaj() should draw 3 rows when parameter are 2,3\",\"file\": null,\"duration\": 2,\"currentRetry\": 0,\"speed\": \"fast\",\"err\": {}},{\"title\": \"should draw 2 columns in row 2 when parameter are 2,3\",\n      \"fullTitle\": \"Tabela crtaj() should draw 2 columns in row 2 when parameter are 2,3\",\n      \"file\": null,\n      \"duration\": 4,\n      \"currentRetry\": 0,\n      \"err\": {\n        \"message\": \"Broj kolona treba biti 3: expected 2 to equal 3\",\n        \"showDiff\": true,\n        \"actual\": \"2\",\n        \"expected\": \"3\",\n        \"operator\": \"strictEqual\",\n        \"stack\": \"AssertionError: Broj kolona treba biti 3: expected 2 to equal 3\\n    at Context.<anonymous> (test.js:22:20)\"}},{\"title\": \"should draw 2 columns in row 2 when parameter are 3,3\",\n      \"fullTitle\": \"Tabela crtaj() should draw 2 columns in row 2 when parameter are 3,3\",\n      \"file\": null,\n      \"duration\": 1,\n      \"currentRetry\": 0,\n      \"speed\": \"fast\",\n      \"err\": {}\n    }\n  ],\n  \"pending\": [],\n  \"failures\": [\n    {\n      \"title\": \"should draw 2 columns in row 2 when parameter are 2,3\",\n      \"fullTitle\": \"Tabela crtaj() should draw 2 columns in row 2 when parameter are 2,3\",\"file\": null,\"duration\": 4,\"currentRetry\": 0,\"err\": {\"message\": \"Broj kolona treba biti 3: expected 2 to equal 3\",\"showDiff\": true,\"actual\": \"2\",\"expected\": \"3\",\"operator\": \"strictEqual\",\"stack\": \"AssertionError: Broj kolona treba biti 3: expected 2 to equal 3\\n    at Context.<anonymous> (test.js:22:20)\"}}],\"passes\": [{\"title\": \"should draw 3 rows when parameter are 2,3\",\"fullTitle\": \"Tabela crtaj() should draw 3 rows when parameter are 2,3\",\"file\": null,\"duration\": 2,\"currentRetry\": 0,\"speed\": \"fast\",\"err\": {}},{\"title\": \"should draw 2 columns in row 2 when parameter are 3,3\",\"fullTitle\": \"Tabela crtaj() should draw 2 columns in row 2 when parameter are 3,3\",\"file\": null,\"duration\": 1,\"currentRetry\": 0,\"speed\": \"fast\",\"err\": {}}]}";
                var rezultat2 = "{\"stats\":{\"suites\": 2,\"tests\": 3,\"passes\": 2,\"pending\": 0,\"failures\": 1,\"start\": \"2021-11-21T22:59:16.206Z\",\"end\": \"2021-11-21T22:59:16.224Z\",\"duration\": 18},\"tests\": [{\"title\": \"should draw 3 rows when parameter are 2,3\",\"fullTitle\": \"Tabela crtaj() should draw 3 rows when parameter are 2,3\",\"file\": null,\"duration\": 2,\"currentRetry\": 0,\"speed\": \"fast\",\"err\": {}},{\"title\": \"should draw 2 columns in row 2 when parameter are 2,3\",\n      \"fullTitle\": \"Tabela crtaj() should draw 2 columns in row 2 when parameter are 2,3\",\n      \"file\": null,\n      \"duration\": 4,\n      \"currentRetry\": 0,\n      \"err\": {\n        \"message\": \"Broj kolona treba biti 3: expected 2 to equal 3\",\n        \"showDiff\": true,\n        \"actual\": \"2\",\n        \"expected\": \"3\",\n        \"operator\": \"strictEqual\",\n        \"stack\": \"AssertionError: Broj kolona treba biti 3: expected 2 to equal 3\\n    at Context.<anonymous> (test.js:22:20)\"}},{\"title\": \"should draw 2 columns in row 2 when parameter are 3,3\",\n      \"fullTitle\": \"Tabela crtaj() should draw 2 columns in row 2 when parameter are 3,3\",\n      \"file\": null,\n      \"duration\": 1,\n      \"currentRetry\": 0,\n      \"speed\": \"fast\",\n      \"err\": {}\n    }\n  ],\n  \"pending\": [],\n  \"failures\": [\n    {\n      \"title\": \"should draw 2 columns in row 2 when parameter are 2,3\",\n      \"fullTitle\": \"Tabela crtaj() should draw 2 columns in row 2 when parameter are 2,3\",\"file\": null,\"duration\": 4,\"currentRetry\": 0,\"err\": {\"message\": \"Broj kolona treba biti 3: expected 2 to equal 3\",\"showDiff\": true,\"actual\": \"2\",\"expected\": \"3\",\"operator\": \"strictEqual\",\"stack\": \"AssertionError: Broj kolona treba biti 3: expected 2 to equal 3\\n    at Context.<anonymous> (test.js:22:20)\"}}],\"passes\": [{\"title\": \"should draw 3 rows when parameter are 2,3\",\"fullTitle\": \"Tabela crtaj() should draw 3 rows when parameter are 2,3\",\"file\": null,\"duration\": 2,\"currentRetry\": 0,\"speed\": \"fast\",\"err\": {}},{\"title\": \"should draw 2 columns in row 2 when parameter are 3,3\",\"fullTitle\": \"Tabela crtaj() should draw 2 columns in row 2 when parameter are 3,3\",\"file\": null,\"duration\": 1,\"currentRetry\": 0,\"speed\": \"fast\",\"err\": {}}]}";
                let objekat = TestoviParser.porediRezultate(rezultat1, rezultat2);
                var expect = chai.expect;
                assert.equal(objekat.promjena, '66.7%',"Tacnost je 66.7%");
                assert.equal(objekat.greske.length, '1');
                expect(objekat.greske).to.have.members(['Tabela crtaj() should draw 2 columns in row 2 when parameter are 2,3']);
                //document.getElementById("ispis").innerHTML = JSON.stringify(objekat);
            });
            //Nisu isti testovi
            it('Treba nam vratiti {"promjena":"50%","greske":["Tabela crtaj() T3", "Tabela crtaj() T2"]}', function() {
                var rezultat1 = "{\"stats\": {\"suites\": 2,\"tests\": 3,\"passes\": 1,\"pending\": 0,\"failures\": 2,\"start\": \"2021-11-23T21:44:19.627Z\",\"end\": \"2021-11-23T21:44:19.643Z\",\"duration\": 16\n  },\"tests\": [{\"title\": \"T1\",\"fullTitle\": \"Tabela crtaj() T1\",\"file\": null,\"duration\": 5,\"currentRetry\": 0,\"err\": {\"message\": \"Broj redova treba biti 3: expected 3 to equal 10\",\"showDiff\": true,\"actual\": \"3\",\"expected\": \"10\",\"operator\": \"strictEqual\",\"stack\": \"AssertionError: Broj redova treba biti 3: expected 3 to equal 10\\n    at Context.<anonymous> (test.js:9:20)\"}},{\"title\": \"T2\",\"fullTitle\": \"Tabela crtaj() T2\",\"file\": null,\"duration\": 1,\"currentRetry\": 0,\"speed\": \"fast\",\n      \"err\": {}\n    },\n    {\n      \"title\": \"T3\",\n      \"fullTitle\": \"Tabela crtaj() T3\",\n      \"file\": null,\n      \"duration\": 1,\n      \"currentRetry\": 0,\n      \"err\": {\n        \"message\": \"Broj kolona treba biti 2: expected 2 to equal 10\",\n        \"showDiff\": true,\n        \"actual\": \"2\",\n        \"expected\": \"10\",\n        \"operator\": \"strictEqual\",\n        \"stack\": \"AssertionError: Broj kolona treba biti 2: expected 2 to equal 10\\n    at Context.<anonymous> (test.js:35:20)\"\n      }\n    }\n  ],\n  \"pending\": [],\n  \"failures\": [\n    {\n      \"title\": \"T1\",\n      \"fullTitle\": \"Tabela crtaj() T1\",\n      \"file\": null,\n      \"duration\": 5,\n      \"currentRetry\": 0,\n      \"err\": {\n        \"message\": \"Broj redova treba biti 3: expected 3 to equal 10\",\n        \"showDiff\": true,\n        \"actual\": \"3\",\n        \"expected\": \"10\",\n        \"operator\": \"strictEqual\",\n        \"stack\": \"AssertionError: Broj redova treba biti 3: expected 3 to equal 10\\n    at Context.<anonymous> (test.js:9:20)\"\n      }\n    },\n    {\n      \"title\": \"T3\",\n      \"fullTitle\": \"Tabela crtaj() T3\",\n      \"file\": null,\"duration\": 1,\"currentRetry\": 0,\"err\": {\n        \"message\": \"Broj kolona treba biti 2: expected 2 to equal 10\",\"showDiff\": true,\"actual\": \"2\", \"expected\": \"10\",\"operator\": \"strictEqual\",\"stack\": \"AssertionError: Broj kolona treba biti 2: expected 2 to equal 10\\n    at Context.<anonymous> (test.js:35:20)\"}}],\"passes\": [{\"title\": \"T2\",\"fullTitle\": \"Tabela crtaj() T2\",\"file\": null,\"duration\": 1,\"currentRetry\": 0,\"speed\": \"fast\",\n      \"err\": {}}]}";
                var rezultat2 = "{\n  \"stats\": {\n    \"suites\": 2,\n    \"tests\": 3,\n    \"passes\": 2,\n    \"pending\": 0,\n    \"failures\": 1,\n    \"start\": \"2021-11-23T21:51:20.719Z\",\n    \"end\": \"2021-11-23T21:51:20.742Z\",\n    \"duration\": 23\n  },\n  \"tests\": [\n    {\n      \"title\": \"T1\",\n      \"fullTitle\": \"Tabela crtaj() T1\",\n      \"file\": null,\n      \"duration\": 2,\n      \"currentRetry\": 0,\n      \"speed\": \"fast\",\n      \"err\": {}\n    },\n    {\n      \"title\": \"T2\",\n      \"fullTitle\": \"Tabela crtaj() T2\",\n      \"file\": null,\n      \"duration\": 3,\n      \"currentRetry\": 0,\n      \"err\": {\n        \"message\": \"Broj kolona treba biti 2: expected 2 to equal 80\",\n        \"showDiff\": true,\n        \"actual\": \"2\",\n        \"expected\": \"80\",\n        \"operator\": \"strictEqual\",\n        \"stack\": \"AssertionError: Broj kolona treba biti 2: expected 2 to equal 80\\n    at Context.<anonymous> (test.js:22:20)\"\n      }\n    },\n    {\n      \"title\": \"T4\",\n      \"fullTitle\": \"Tabela crtaj() T4\",\n      \"file\": null,\n      \"duration\": 1,\n      \"currentRetry\": 0,\n      \"speed\": \"fast\",\n      \"err\": {}\n    }\n  ],\n  \"pending\": [],\n  \"failures\": [\n    {\n      \"title\": \"T2\",\n      \"fullTitle\": \"Tabela crtaj() T2\",\n      \"file\": null,\n      \"duration\": 3,\n      \"currentRetry\": 0,\n      \"err\": {\n        \"message\": \"Broj kolona treba biti 2: expected 2 to equal 80\",\n        \"showDiff\": true,\n        \"actual\": \"2\",\n        \"expected\": \"80\",\n        \"operator\": \"strictEqual\",\n        \"stack\": \"AssertionError: Broj kolona treba biti 2: expected 2 to equal 80\\n    at Context.<anonymous> (test.js:22:20)\"\n      }\n    }\n  ],\n  \"passes\": [\n    {\n      \"title\": \"T1\",\n      \"fullTitle\": \"Tabela crtaj() T1\",\n      \"file\": null,\n      \"duration\": 2,\n      \"currentRetry\": 0,\n      \"speed\": \"fast\",\n      \"err\": {}\n    },\n    {\n      \"title\": \"T4\",\n      \"fullTitle\": \"Tabela crtaj() T4\",\n      \"file\": null,\n      \"duration\": 1,\n      \"currentRetry\": 0,\n      \"speed\": \"fast\",\n      \"err\": {}\n    }\n  ]\n}";
                let objekat = TestoviParser.porediRezultate(rezultat1, rezultat2);
                var expect = chai.expect;
                assert.equal(objekat.promjena, '50%',"Tacnost je 50%");
                assert.equal(objekat.greske.length, '2');
                expect(objekat.greske).to.have.members(['Tabela crtaj() T3', 'Tabela crtaj() T2']);
                //document.getElementById("ispis").innerHTML = JSON.stringify(objekat.promjena);
            });
            //Isti testovi provjera je li u leksikografskom poretku
            it('Treba nam vratiti {"promjena":"33.3%","greske":["Tabela crtaj() T1", "Tabela crtaj() T3"]}', function(){
                var rezultat1 = "{\"stats\": {\"suites\": 2,\"tests\": 3,\"passes\": 1,\"pending\": 0,\"failures\": 2,\"start\": \"2021-11-23T21:44:19.627Z\",\"end\": \"2021-11-23T21:44:19.643Z\",\"duration\": 16\n  },\"tests\": [{\"title\": \"T1\",\"fullTitle\": \"Tabela crtaj() T1\",\"file\": null,\"duration\": 5,\"currentRetry\": 0,\"err\": {\"message\": \"Broj redova treba biti 3: expected 3 to equal 10\",\"showDiff\": true,\"actual\": \"3\",\"expected\": \"10\",\"operator\": \"strictEqual\",\"stack\": \"AssertionError: Broj redova treba biti 3: expected 3 to equal 10\\n    at Context.<anonymous> (test.js:9:20)\"}},{\"title\": \"T2\",\"fullTitle\": \"Tabela crtaj() T2\",\"file\": null,\"duration\": 1,\"currentRetry\": 0,\"speed\": \"fast\",\n      \"err\": {}\n    },\n    {\n      \"title\": \"T3\",\n      \"fullTitle\": \"Tabela crtaj() T3\",\n      \"file\": null,\n      \"duration\": 1,\n      \"currentRetry\": 0,\n      \"err\": {\n        \"message\": \"Broj kolona treba biti 2: expected 2 to equal 10\",\n        \"showDiff\": true,\n        \"actual\": \"2\",\n        \"expected\": \"10\",\n        \"operator\": \"strictEqual\",\n        \"stack\": \"AssertionError: Broj kolona treba biti 2: expected 2 to equal 10\\n    at Context.<anonymous> (test.js:35:20)\"\n      }\n    }\n  ],\n  \"pending\": [],\n  \"failures\": [\n    {\n      \"title\": \"T1\",\n      \"fullTitle\": \"Tabela crtaj() T1\",\n      \"file\": null,\n      \"duration\": 5,\n      \"currentRetry\": 0,\n      \"err\": {\n        \"message\": \"Broj redova treba biti 3: expected 3 to equal 10\",\n        \"showDiff\": true,\n        \"actual\": \"3\",\n        \"expected\": \"10\",\n        \"operator\": \"strictEqual\",\n        \"stack\": \"AssertionError: Broj redova treba biti 3: expected 3 to equal 10\\n    at Context.<anonymous> (test.js:9:20)\"\n      }\n    },\n    {\n      \"title\": \"T3\",\n      \"fullTitle\": \"Tabela crtaj() T3\",\n      \"file\": null,\"duration\": 1,\"currentRetry\": 0,\"err\": {\n        \"message\": \"Broj kolona treba biti 2: expected 2 to equal 10\",\"showDiff\": true,\"actual\": \"2\", \"expected\": \"10\",\"operator\": \"strictEqual\",\"stack\": \"AssertionError: Broj kolona treba biti 2: expected 2 to equal 10\\n    at Context.<anonymous> (test.js:35:20)\"}}],\"passes\": [{\"title\": \"T2\",\"fullTitle\": \"Tabela crtaj() T2\",\"file\": null,\"duration\": 1,\"currentRetry\": 0,\"speed\": \"fast\",\n      \"err\": {}}]}";
                var rezultat2 = "{\"stats\": {\"suites\": 2,\"tests\": 3,\"passes\": 1,\"pending\": 0,\"failures\": 2,\"start\": \"2021-11-23T21:44:19.627Z\",\"end\": \"2021-11-23T21:44:19.643Z\",\"duration\": 16\n  },\"tests\": [{\"title\": \"T1\",\"fullTitle\": \"Tabela crtaj() T1\",\"file\": null,\"duration\": 5,\"currentRetry\": 0,\"err\": {\"message\": \"Broj redova treba biti 3: expected 3 to equal 10\",\"showDiff\": true,\"actual\": \"3\",\"expected\": \"10\",\"operator\": \"strictEqual\",\"stack\": \"AssertionError: Broj redova treba biti 3: expected 3 to equal 10\\n    at Context.<anonymous> (test.js:9:20)\"}},{\"title\": \"T2\",\"fullTitle\": \"Tabela crtaj() T2\",\"file\": null,\"duration\": 1,\"currentRetry\": 0,\"speed\": \"fast\",\n      \"err\": {}\n    },\n    {\n      \"title\": \"T3\",\n      \"fullTitle\": \"Tabela crtaj() T3\",\n      \"file\": null,\n      \"duration\": 1,\n      \"currentRetry\": 0,\n      \"err\": {\n        \"message\": \"Broj kolona treba biti 2: expected 2 to equal 10\",\n        \"showDiff\": true,\n        \"actual\": \"2\",\n        \"expected\": \"10\",\n        \"operator\": \"strictEqual\",\n        \"stack\": \"AssertionError: Broj kolona treba biti 2: expected 2 to equal 10\\n    at Context.<anonymous> (test.js:35:20)\"\n      }\n    }\n  ],\n  \"pending\": [],\n  \"failures\": [\n    {\n      \"title\": \"T1\",\n      \"fullTitle\": \"Tabela crtaj() T1\",\n      \"file\": null,\n      \"duration\": 5,\n      \"currentRetry\": 0,\n      \"err\": {\n        \"message\": \"Broj redova treba biti 3: expected 3 to equal 10\",\n        \"showDiff\": true,\n        \"actual\": \"3\",\n        \"expected\": \"10\",\n        \"operator\": \"strictEqual\",\n        \"stack\": \"AssertionError: Broj redova treba biti 3: expected 3 to equal 10\\n    at Context.<anonymous> (test.js:9:20)\"\n      }\n    },\n    {\n      \"title\": \"T3\",\n      \"fullTitle\": \"Tabela crtaj() T3\",\n      \"file\": null,\"duration\": 1,\"currentRetry\": 0,\"err\": {\n        \"message\": \"Broj kolona treba biti 2: expected 2 to equal 10\",\"showDiff\": true,\"actual\": \"2\", \"expected\": \"10\",\"operator\": \"strictEqual\",\"stack\": \"AssertionError: Broj kolona treba biti 2: expected 2 to equal 10\\n    at Context.<anonymous> (test.js:35:20)\"}}],\"passes\": [{\"title\": \"T2\",\"fullTitle\": \"Tabela crtaj() T2\",\"file\": null,\"duration\": 1,\"currentRetry\": 0,\"speed\": \"fast\",\n      \"err\": {}}]}";
                let objekat = TestoviParser.porediRezultate(rezultat1, rezultat2);
                assert.equal(objekat.promjena, '33.3%');
                assert.equal(objekat.greske.length, '2');
                assert.deepEqual(objekat.greske,["Tabela crtaj() T1", "Tabela crtaj() T3"]);
            });
            //razliciti i provjera jesu li u leksikografskom poretku
            it('Treba nam vratiti {"promjena":"60%","greske":["Tabela crtaj() T3", "Tabela crtaj() T6", "Tabela crtaj() T2"]}', function() {
                var rezultat1 = "{\n  \"stats\": {\n    \"suites\": 2,\n    \"tests\": 3,\n    \"passes\": 1,\n    \"pending\": 0,\n    \"failures\": 2,\n    \"start\": \"2021-11-23T23:28:01.892Z\",\n    \"end\": \"2021-11-23T23:28:01.915Z\",\n    \"duration\": 23\n  },\n  \"tests\": [\n    {\n      \"title\": \"T6\",\n      \"fullTitle\": \"Tabela crtaj() T6\",\n      \"file\": null,\n      \"duration\": 5,\n      \"currentRetry\": 0,\n      \"err\": {\n        \"message\": \"Broj redova treba biti 3: expected 3 to equal 8\",\n        \"showDiff\": true,\n        \"actual\": \"3\",\"expected\": \"8\",\"operator\": \"strictEqual\",\"stack\": \"AssertionError: Broj redova treba biti 3: expected 3 to equal 8\\n    at Context.<anonymous> (test.js:9:20)\"\n      }\n    },\n    {\n      \"title\": \"T2\",\n      \"fullTitle\": \"Tabela crtaj() T2\",\n      \"file\": null,\n      \"duration\": 1,\n      \"currentRetry\": 0,\n      \"speed\": \"fast\",\n      \"err\": {}\n    },\n    {\n      \"title\": \"T3\",\n      \"fullTitle\": \"Tabela crtaj() T3\",\n      \"file\": null,\n      \"duration\": 1,\n      \"currentRetry\": 0,\n      \"err\": {\n        \"message\": \"Broj kolona treba biti 2: expected 2 to equal 20\",\n        \"showDiff\": true,\n        \"actual\": \"2\",\n        \"expected\": \"20\",\n        \"operator\": \"strictEqual\",\"stack\": \"AssertionError: Broj kolona treba biti 2: expected 2 to equal 20\\n    at Context.<anonymous> (test.js:35:20)\"}}],\"pending\": [],\"failures\": [{\"title\": \"T6\",\"fullTitle\": \"Tabela crtaj() T6\",\"file\": null,\"duration\": 5,\"currentRetry\": 0,\"err\": {\"message\": \"Broj redova treba biti 3: expected 3 to equal 8\",\"showDiff\": true,\"actual\": \"3\",\"expected\": \"8\",\"operator\": \"strictEqual\",\"stack\": \"AssertionError: Broj redova treba biti 3: expected 3 to equal 8\\n    at Context.<anonymous> (test.js:9:20)\"\n      }\n    },\n    {\n      \"title\": \"T3\",\"fullTitle\": \"Tabela crtaj() T3\",\"file\": null,\"duration\": 1,\"currentRetry\": 0,\"err\": {\"message\": \"Broj kolona treba biti 2: expected 2 to equal 20\",\"showDiff\": true,\"actual\": \"2\",\"expected\": \"20\",\"operator\": \"strictEqual\",\"stack\": \"AssertionError: Broj kolona treba biti 2: expected 2 to equal 20\\n    at Context.<anonymous> (test.js:35:20)\"}}],\"passes\": [{\"title\": \"T2\",\"fullTitle\": \"Tabela crtaj() T2\",\"file\": null,\"duration\": 1,\"currentRetry\": 0,\"speed\": \"fast\",\"err\": {}}]}";
                var rezultat2 = "{\n  \"stats\": {\n    \"suites\": 2,\n    \"tests\": 3,\n    \"passes\": 2,\n    \"pending\": 0,\n    \"failures\": 1,\n    \"start\": \"2021-11-23T23:29:17.875Z\",\n    \"end\": \"2021-11-23T23:29:17.894Z\",\n    \"duration\": 19\n  },\n  \"tests\": [\n    {\n      \"title\": \"T1\",\n      \"fullTitle\": \"Tabela crtaj() T1\",\n      \"file\": null,\n      \"duration\": 3,\n      \"currentRetry\": 0,\n      \"speed\": \"fast\",\n      \"err\": {}\n    },\n    {\n      \"title\": \"T2\",\n      \"fullTitle\": \"Tabela crtaj() T2\",\n      \"file\": null,\n      \"duration\": 2,\n      \"currentRetry\": 0,\n      \"err\": {\n        \"message\": \"Broj kolona treba biti 2: expected 2 to equal 23\",\n        \"showDiff\": true,\n        \"actual\": \"2\",\n        \"expected\": \"23\",\n        \"operator\": \"strictEqual\",\n        \"stack\": \"AssertionError: Broj kolona treba biti 2: expected 2 to equal 23\\n    at Context.<anonymous> (test.js:59:20)\"\n      }\n    },\n    {\n      \"title\": \"T4\",\n      \"fullTitle\": \"Tabela crtaj() T4\",\n      \"file\": null,\n      \"duration\": 0,\n      \"currentRetry\": 0,\n      \"speed\": \"fast\",\n      \"err\": {}\n    }\n  ],\n  \"pending\": [],\n  \"failures\": [\n    {\n      \"title\": \"T2\",\n      \"fullTitle\": \"Tabela crtaj() T2\",\n      \"file\": null,\n      \"duration\": 2,\n      \"currentRetry\": 0,\n      \"err\": {\n        \"message\": \"Broj kolona treba biti 2: expected 2 to equal 23\",\n        \"showDiff\": true,\n        \"actual\": \"2\",\n        \"expected\": \"23\",\n        \"operator\": \"strictEqual\",\n        \"stack\": \"AssertionError: Broj kolona treba biti 2: expected 2 to equal 23\\n    at Context.<anonymous> (test.js:59:20)\"\n      }\n    }\n  ],\n  \"passes\": [\n    {\n      \"title\": \"T1\",\n      \"fullTitle\": \"Tabela crtaj() T1\",\n      \"file\": null,\n      \"duration\": 3,\n      \"currentRetry\": 0,\n      \"speed\": \"fast\",\n      \"err\": {}\n    },\n    {\n      \"title\": \"T4\",\n      \"fullTitle\": \"Tabela crtaj() T4\",\n      \"file\": null,\n      \"duration\": 0,\n      \"currentRetry\": 0,\n      \"speed\": \"fast\",\n      \"err\": {}\n    }\n  ]\n}"
                let objekat = TestoviParser.porediRezultate(rezultat1, rezultat2);
                assert.equal(objekat.greske.length, '3');
                assert.equal(objekat.promjena, '60%');
                assert.deepEqual(objekat.greske,["Tabela crtaj() T3", "Tabela crtaj() T6", "Tabela crtaj() T2"]);
                //document.getElementById("ispis").innerHTML = JSON.stringify(objekat.promjena);
            });
            //svi u prvom padaju i razliciti su
            it('Treba nam vratiti {"promjena":"40%","greske":["Tabela crtaj() T3", "Tabela crtaj() T6"]', function() {
                var rezultat1 = "{\n  \"stats\": {\n    \"suites\": 2,\n    \"tests\": 2,\n    \"passes\": 0,\n    \"pending\": 0,\n    \"failures\": 2,\n    \"start\": \"2021-11-23T23:59:49.643Z\",\n    \"end\": \"2021-11-23T23:59:49.661Z\",\n    \"duration\": 18\n  },\n  \"tests\": [\n    {\n      \"title\": \"T6\",\n      \"fullTitle\": \"Tabela crtaj() T6\",\n      \"file\": null,\n      \"duration\": 4,\n      \"currentRetry\": 0,\n      \"err\": {\n        \"message\": \"Broj redova treba biti 3: expected 3 to equal 8\",\n        \"showDiff\": true,\n        \"actual\": \"3\",\n        \"expected\": \"8\",\n        \"operator\": \"strictEqual\",\n        \"stack\": \"AssertionError: Broj redova treba biti 3: expected 3 to equal 8\\n    at Context.<anonymous> (test.js:9:20)\"\n      }\n    },\n    {\n      \"title\": \"T3\",\n      \"fullTitle\": \"Tabela crtaj() T3\",\n      \"file\": null,\n      \"duration\": 1,\n      \"currentRetry\": 0,\n      \"err\": {\n        \"message\": \"Broj kolona treba biti 2: expected 2 to equal 20\",\n        \"showDiff\": true,\n        \"actual\": \"2\",\n        \"expected\": \"20\",\n        \"operator\": \"strictEqual\",\n        \"stack\": \"AssertionError: Broj kolona treba biti 2: expected 2 to equal 20\\n    at Context.<anonymous> (test.js:22:20)\"\n      }\n    }\n  ],\n  \"pending\": [],\n  \"failures\": [\n    {\n      \"title\": \"T6\",\n      \"fullTitle\": \"Tabela crtaj() T6\",\n      \"file\": null,\n      \"duration\": 4,\n      \"currentRetry\": 0,\n      \"err\": {\n        \"message\": \"Broj redova treba biti 3: expected 3 to equal 8\",\n        \"showDiff\": true,\n        \"actual\": \"3\",\n        \"expected\": \"8\",\n        \"operator\": \"strictEqual\",\n        \"stack\": \"AssertionError: Broj redova treba biti 3: expected 3 to equal 8\\n    at Context.<anonymous> (test.js:9:20)\"\n      }\n    },\n    {\n      \"title\": \"T3\",\n      \"fullTitle\": \"Tabela crtaj() T3\",\n      \"file\": null,\n      \"duration\": 1,\n      \"currentRetry\": 0,\n      \"err\": {\n        \"message\": \"Broj kolona treba biti 2: expected 2 to equal 20\",\n        \"showDiff\": true,\n        \"actual\": \"2\",\n        \"expected\": \"20\",\n        \"operator\": \"strictEqual\",\n        \"stack\": \"AssertionError: Broj kolona treba biti 2: expected 2 to equal 20\\n    at Context.<anonymous> (test.js:22:20)\"\n      }\n    }\n  ],\n  \"passes\": []\n}";
                var rezultat2 = "{\n  \"stats\": {\n    \"suites\": 2,\n    \"tests\": 3,\n    \"passes\": 3,\n    \"pending\": 0,\n    \"failures\": 0,\n    \"start\": \"2021-11-24T00:01:53.325Z\",\n    \"end\": \"2021-11-24T00:01:53.342Z\",\n    \"duration\": 17\n  },\n  \"tests\": [\n    {\n      \"title\": \"T1\",\n      \"fullTitle\": \"Tabela crtaj() T1\",\n      \"file\": null,\n      \"duration\": 2,\n      \"currentRetry\": 0,\n      \"speed\": \"fast\",\n      \"err\": {}\n    },\n    {\n      \"title\": \"T2\",\n      \"fullTitle\": \"Tabela crtaj() T2\",\n      \"file\": null,\n      \"duration\": 1,\n      \"currentRetry\": 0,\n      \"speed\": \"fast\",\n      \"err\": {}\n    },\n    {\n      \"title\": \"T4\",\n      \"fullTitle\": \"Tabela crtaj() T4\",\n      \"file\": null,\n      \"duration\": 1,\n      \"currentRetry\": 0,\n      \"speed\": \"fast\",\n      \"err\": {}\n    }\n  ],\n  \"pending\": [],\n  \"failures\": [],\n  \"passes\": [\n    {\n      \"title\": \"T1\",\n      \"fullTitle\": \"Tabela crtaj() T1\",\n      \"file\": null,\n      \"duration\": 2,\n      \"currentRetry\": 0,\n      \"speed\": \"fast\",\n      \"err\": {}\n    },\n    {\n      \"title\": \"T2\",\n      \"fullTitle\": \"Tabela crtaj() T2\",\n      \"file\": null,\n      \"duration\": 1,\n      \"currentRetry\": 0,\n      \"speed\": \"fast\",\n      \"err\": {}\n    },\n    {\n      \"title\": \"T4\",\n      \"fullTitle\": \"Tabela crtaj() T4\",\n      \"file\": null,\n      \"duration\": 1,\n      \"currentRetry\": 0,\n      \"speed\": \"fast\",\n      \"err\": {}\n    }\n  ]\n}";
                let objekat = TestoviParser.porediRezultate(rezultat1, rezultat2);
                assert.equal(objekat.greske.length, '2');
                assert.equal(objekat.promjena, '40%');
                assert.deepEqual(objekat.greske,["Tabela crtaj() T3", "Tabela crtaj() T6"]);
            });
            //razliciti testovi, svi iz drugog padaju
            it('Treba nam vratiti {"promjena":"100%","greske":["Tabela crtaj() T6","Tabela crtaj() T1","Tabela crtaj() T2","Tabela crtaj() T4"]', function() {
                var rezultat1 = "{\n  \"stats\": {\n    \"suites\": 2,\n    \"tests\": 2,\n    \"passes\": 1,\n    \"pending\": 0,\n    \"failures\": 1,\n    \"start\": \"2021-11-27T21:14:57.749Z\",\n    \"end\": \"2021-11-27T21:14:57.764Z\",\n    \"duration\": 15\n  },\n  \"tests\": [\n    {\n      \"title\": \"T6\",\n      \"fullTitle\": \"Tabela crtaj() T6\",\n      \"file\": null,\n      \"duration\": 4,\n      \"currentRetry\": 0,\n      \"err\": {\n        \"message\": \"Broj redova treba biti 3: expected 3 to equal 8\",\n        \"showDiff\": true,\n        \"actual\": \"3\",\n        \"expected\": \"8\",\n        \"operator\": \"strictEqual\",\n        \"stack\": \"AssertionError: Broj redova treba biti 3: expected 3 to equal 8\\n    at Context.<anonymous> (test.js:9:20)\"\n      }\n    },\n    {\n      \"title\": \"T3\",\n      \"fullTitle\": \"Tabela crtaj() T3\",\n      \"file\": null,\n      \"duration\": 1,\n      \"currentRetry\": 0,\n      \"speed\": \"fast\",\n      \"err\": {}\n    }\n  ],\n  \"pending\": [],\n  \"failures\": [\n    {\n      \"title\": \"T6\",\n      \"fullTitle\": \"Tabela crtaj() T6\",\n      \"file\": null,\n      \"duration\": 4,\n      \"currentRetry\": 0,\n      \"err\": {\n        \"message\": \"Broj redova treba biti 3: expected 3 to equal 8\",\n        \"showDiff\": true,\n        \"actual\": \"3\",\n        \"expected\": \"8\",\n        \"operator\": \"strictEqual\",\n        \"stack\": \"AssertionError: Broj redova treba biti 3: expected 3 to equal 8\\n    at Context.<anonymous> (test.js:9:20)\"\n      }\n    }\n  ],\n  \"passes\": [\n    {\n      \"title\": \"T3\",\n      \"fullTitle\": \"Tabela crtaj() T3\",\n      \"file\": null,\n      \"duration\": 1,\n      \"currentRetry\": 0,\n      \"speed\": \"fast\",\n      \"err\": {}\n    }\n  ]\n}";
                var rezultat2 = "{\"stats\": {\"suites\": 2,\"tests\": 3,\"passes\": 0,\"pending\": 0,\"failures\": 3,\"start\": \"2021-11-27T21:13:39.735Z\",\"end\": \"2021-11-27T21:13:39.750Z\",\"duration\": 15},\"tests\": [{\"title\": \"T1\",\"fullTitle\": \"Tabela crtaj() T1\",\"file\": null,\"duration\": 2,\"currentRetry\": 0,\"err\": {\"message\": \"Broj redova treba biti 3: expected 3 to equal 40\",\"showDiff\": true,\"actual\": \"3\",\"expected\": \"40\",\"operator\": \"strictEqual\",\"stack\": \"AssertionError: Broj redova treba biti 3: expected 3 to equal 40\\n    at Context.<anonymous> (test.js:33:20)\"}\n    },{\"title\": \"T2\",\"fullTitle\": \"Tabela crtaj() T2\",\"file\": null,\"duration\": 1,\"currentRetry\": 0,\"err\": {\"message\": \"Broj kolona treba biti 2: expected 2 to equal 20\",\"showDiff\": true,\"actual\": \"2\",\"expected\": \"20\",\"operator\": \"strictEqual\",\"stack\": \"AssertionError: Broj kolona treba biti 2: expected 2 to equal 20\\n    at Context.<anonymous> (test.js:46:20)\"\n      }},{\"title\": \"T4\",\"fullTitle\": \"Tabela crtaj() T4\",\"file\": null,\"duration\": 1,\"currentRetry\": 0,\"err\": {\"message\": \"Broj kolona treba biti 2: expected 2 to equal 31\",\"showDiff\": true,\"actual\": \"2\",\"expected\": \"31\",\"operator\": \"strictEqual\",\"stack\": \"AssertionError: Broj kolona treba biti 2: expected 2 to equal 31\\n    at Context.<anonymous> (test.js:59:20)\"}}],\"pending\": [],\n  \"failures\": [{\"title\": \"T1\",\"fullTitle\": \"Tabela crtaj() T1\",\n      \"file\": null,\n      \"duration\": 2,\n      \"currentRetry\": 0,\n      \"err\": {\n        \"message\": \"Broj redova treba biti 3: expected 3 to equal 40\",\"showDiff\": true,\"actual\": \"3\",\"expected\": \"40\",\"operator\": \"strictEqual\",\"stack\": \"AssertionError: Broj redova treba biti 3: expected 3 to equal 40\\n    at Context.<anonymous> (test.js:33:20)\"\n      }\n    },\n    {\n      \"title\": \"T2\",\n      \"fullTitle\": \"Tabela crtaj() T2\",\n      \"file\": null,\n      \"duration\": 1,\n      \"currentRetry\": 0,\n      \"err\": {\n        \"message\": \"Broj kolona treba biti 2: expected 2 to equal 20\",\n        \"showDiff\": true,\n        \"actual\": \"2\",\n        \"expected\": \"20\",\n        \"operator\": \"strictEqual\",\n        \"stack\": \"AssertionError: Broj kolona treba biti 2: expected 2 to equal 20\\n    at Context.<anonymous> (test.js:46:20)\"}},{\"title\": \"T4\",\"fullTitle\": \"Tabela crtaj() T4\",\"file\": null,\"duration\": 1,\"currentRetry\": 0,\"err\": {\"message\": \"Broj kolona treba biti 2: expected 2 to equal 31\",\"showDiff\": true,\"actual\": \"2\",\"expected\": \"31\",\"operator\": \"strictEqual\",\"stack\": \"AssertionError: Broj kolona treba biti 2: expected 2 to equal 31\\n    at Context.<anonymous> (test.js:59:20)\"}}],\"passes\": []}";
                let objekat = TestoviParser.porediRezultate(rezultat1, rezultat2);
                assert.deepEqual(objekat.greske,["Tabela crtaj() T6","Tabela crtaj() T1","Tabela crtaj() T2","Tabela crtaj() T4"]);
                assert.equal(objekat.promjena, '100%');
                assert.equal(objekat.greske.length, '4');
            });

            //ne mogu se izvrsiti
            it('Treba nam vratiti {"tacnost”:0%","greske":["Testovi se ne mogu izvršiti"]}', function() {
                var rezultat1 = "{{{{{{{{{\n  \"stats\": {\n    \"suites\": 2,\n    \"tests\": 2,\n    \"passes\": 1,\n    \"pending\": 0,\n    \"failures\": 1,\n    \"start\": \"2021-11-27T21:14:57.749Z\",\n    \"end\": \"2021-11-27T21:14:57.764Z\",\n    \"duration\": 15\n  },\n  \"tests\": [\n    {\n      \"title\": \"T6\",\n      \"fullTitle\": \"Tabela crtaj() T6\",\n      \"file\": null,\n      \"duration\": 4,\n      \"currentRetry\": 0,\n      \"err\": {\n        \"message\": \"Broj redova treba biti 3: expected 3 to equal 8\",\n        \"showDiff\": true,\n        \"actual\": \"3\",\n        \"expected\": \"8\",\n        \"operator\": \"strictEqual\",\n        \"stack\": \"AssertionError: Broj redova treba biti 3: expected 3 to equal 8\\n    at Context.<anonymous> (test.js:9:20)\"\n      }\n    },\n    {\n      \"title\": \"T3\",\n      \"fullTitle\": \"Tabela crtaj() T3\",\n      \"file\": null,\n      \"duration\": 1,\n      \"currentRetry\": 0,\n      \"speed\": \"fast\",\n      \"err\": {}\n    }\n  ],\n  \"pending\": [],\n  \"failures\": [\n    {\n      \"title\": \"T6\",\n      \"fullTitle\": \"Tabela crtaj() T6\",\n      \"file\": null,\n      \"duration\": 4,\n      \"currentRetry\": 0,\n      \"err\": {\n        \"message\": \"Broj redova treba biti 3: expected 3 to equal 8\",\n        \"showDiff\": true,\n        \"actual\": \"3\",\n        \"expected\": \"8\",\n        \"operator\": \"strictEqual\",\n        \"stack\": \"AssertionError: Broj redova treba biti 3: expected 3 to equal 8\\n    at Context.<anonymous> (test.js:9:20)\"\n      }\n    }\n  ],\n  \"passes\": [\n    {\n      \"title\": \"T3\",\n      \"fullTitle\": \"Tabela crtaj() T3\",\n      \"file\": null,\n      \"duration\": 1,\n      \"currentRetry\": 0,\n      \"speed\": \"fast\",\n      \"err\": {}\n    }\n  ]\n}";
                var rezultat2 = "{\n  \"stats\": {\n    \"suites\": 2,\n    \"tests\": 2,\n    \"passes\": 1,\n    \"pending\": 0,\n    \"failures\": 1,\n    \"start\": \"2021-11-27T21:14:57.749Z\",\n    \"end\": \"2021-11-27T21:14:57.764Z\",\n    \"duration\": 15\n  },\n  \"tests\": [\n    {\n      \"title\": \"T6\",\n      \"fullTitle\": \"Tabela crtaj() T6\",\n      \"file\": null,\n      \"duration\": 4,\n      \"currentRetry\": 0,\n      \"err\": {\n        \"message\": \"Broj redova treba biti 3: expected 3 to equal 8\",\n        \"showDiff\": true,\n        \"actual\": \"3\",\n        \"expected\": \"8\",\n        \"operator\": \"strictEqual\",\n        \"stack\": \"AssertionError: Broj redova treba biti 3: expected 3 to equal 8\\n    at Context.<anonymous> (test.js:9:20)\"\n      }\n    },\n    {\n      \"title\": \"T3\",\n      \"fullTitle\": \"Tabela crtaj() T3\",\n      \"file\": null,\n      \"duration\": 1,\n      \"currentRetry\": 0,\n      \"speed\": \"fast\",\n      \"err\": {}\n    }\n  ],\n  \"pending\": [],\n  \"failures\": [\n    {\n      \"title\": \"T6\",\n      \"fullTitle\": \"Tabela crtaj() T6\",\n      \"file\": null,\n      \"duration\": 4,\n      \"currentRetry\": 0,\n      \"err\": {\n        \"message\": \"Broj redova treba biti 3: expected 3 to equal 8\",\n        \"showDiff\": true,\n        \"actual\": \"3\",\n        \"expected\": \"8\",\n        \"operator\": \"strictEqual\",\n        \"stack\": \"AssertionError: Broj redova treba biti 3: expected 3 to equal 8\\n    at Context.<anonymous> (test.js:9:20)\"\n      }\n    }\n  ],\n  \"passes\": [\n    {\n      \"title\": \"T3\",\n      \"fullTitle\": \"Tabela crtaj() T3\",\n      \"file\": null,\n      \"duration\": 1,\n      \"currentRetry\": 0,\n      \"speed\": \"fast\",\n      \"err\": {}\n    }\n  ]\n}";
                let objekat = TestoviParser.porediRezultate(rezultat1, rezultat2);
                assert.equal(objekat.promjena, '0%',"Promjena je 0%");
                assert.deepEqual(objekat.greske,["Testovi se ne mogu izvršiti"]);
            });

        });

    });
